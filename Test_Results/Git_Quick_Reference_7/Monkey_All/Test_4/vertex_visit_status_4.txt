---------- Controls Visited (2) ----------
Unknown
switcher

---------- Controls Not Visited (18) ----------
nav_view
version_view
command_view
empty_view
switcher
Unknown
content_frame
link_view
Unknown
recycler_view
detail_view
drawer_layout
Unknown
empty_view
recycler_view
selection_overlay
title_view
content_frame

---------- Methods Visited (177) ----------
<io.github.easyintent.quickref.data.ReferenceItem: java.lang.String getId()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void onCreate(android.os.Bundle)>
<org.slf4j.impl.StaticLoggerBinder: org.slf4j.ILoggerFactory getLoggerFactory()>
<io.github.easyintent.quickref.QuickRefActivityEx: void injectExtras_()>
<eu.lp0.slf4j.android.LogAdapter: void <clinit>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void init_(android.os.Bundle)>
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onItemTap(java.lang.Object,int)>
<io.github.easyintent.quickref.MainActivityEx: void onCreate(android.os.Bundle)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void injectFragmentArguments_()>
<eu.lp0.slf4j.android.LoggerConfig: void <clinit>()>
<eu.lp0.slf4j.android.LoggingConfig: eu.lp0.slf4j.android.LoggerConfig get(java.lang.String)>
<org.slf4j.helpers.MessageFormatter: java.lang.Throwable getThrowableCandidate(java.lang.Object[])>
<io.github.easyintent.quickref.QuickRefActivityEx: void setContentView(int)>
<eu.lp0.slf4j.android.LogAdapter: void <init>(java.lang.String,eu.lp0.slf4j.android.LoggerConfig)>
<eu.lp0.slf4j.android.LogAdapter$1: void <clinit>()>
<org.slf4j.LoggerFactory: void <clinit>()>
<io.github.easyintent.quickref.data.ReferenceItem: void setParentId(java.lang.String)>
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.MainActivityEx: void <init>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onActivityCreated(android.os.Bundle)>
<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List getLoggers()>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: java.util.List createList(android.database.Cursor)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: io.github.easyintent.quickref.fragment.ReferenceListFragment newListChildrenInstance(java.lang.String)>
<io.github.easyintent.quickref.data.ReferenceItem: boolean hasCommand()>
<eu.lp0.slf4j.android.LogAdapter: java.lang.String rewriteMsg(java.lang.String,int)>
<eu.lp0.slf4j.android.LogAdapter: void debug(java.lang.String,java.lang.Object)>
<eu.lp0.slf4j.android.LoggerFactory: java.lang.String createTag(java.lang.String)>
<io.github.easyintent.quickref.QuickRefActivityEx: void onCreate(android.os.Bundle)>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: io.github.easyintent.quickref.data.ReferenceItem toReferenceItem(android.database.Cursor)>
<io.github.easyintent.quickref.repository.AssetsDbFileLocator: java.io.File findDbFile()>
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable)>
<eu.lp0.slf4j.android.LoggingConfig: void <init>(java.lang.String,org.slf4j.Logger)>
<io.github.easyintent.quickref.MainActivityEx: void setContentView(int)>
<io.github.easyintent.quickref.repository.AssetsDbFileLocator: void copyFromAssetTo(java.io.File)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<io.github.easyintent.quickref.MainActivity: void <init>()>
<org.slf4j.helpers.SubstituteLoggerFactory: void postInitialization()>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void showItem(io.github.easyintent.quickref.data.ReferenceItem)>
<org.androidannotations.api.BackgroundExecutor$Task: void postExecute()>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onItemTap(io.github.easyintent.quickref.data.ReferenceItem,int)>
<eu.lp0.slf4j.android.LoggerConfig: boolean merge(eu.lp0.slf4j.android.LoggerConfig)>
<io.github.easyintent.quickref.data.ReferenceItem: void <init>()>
<io.github.easyintent.quickref.repository.RepositoryFactory: void <init>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void onDestroyView()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void <init>()>
<io.github.easyintent.quickref.MainActivity: void onCreate(android.os.Bundle)>
<io.github.easyintent.quickref.data.ReferenceItem: boolean hasChildren()>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onLoadDone(boolean,java.util.List,java.lang.String)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void loadCategory(io.github.easyintent.quickref.repository.RepositoryFactory,java.lang.String)>
<eu.lp0.slf4j.android.LoggerConfig$ShowName: void <clinit>()>
<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>
<io.github.easyintent.quickref.QuickRefActivityEx: boolean onOptionsItemSelected(android.view.MenuItem)>
<org.androidannotations.api.UiThreadExecutor: void runTask(java.lang.String,java.lang.Runnable,long)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder: void bind(io.github.easyintent.quickref.data.ReferenceItem)>
<org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)>
<org.slf4j.helpers.Util: void <clinit>()>
<io.github.easyintent.quickref.QuickRefActivity: void initFragment()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>
<org.slf4j.helpers.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map)>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: java.util.List list(java.lang.String)>
<org.slf4j.helpers.FormattingTuple: void <init>(java.lang.String)>
<io.github.easyintent.quickref.data.ReferenceItem: java.lang.String getSummary()>
<io.github.easyintent.quickref.QuickRefActivity: void upClicked()>
<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>
<io.github.easyintent.quickref.data.ReferenceItem: void setTitle(java.lang.String)>
<io.github.easyintent.quickref.MainActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void loadCategory(io.github.easyintent.quickref.repository.RepositoryFactory,java.lang.String)>
<io.github.easyintent.quickref.repository.AssetsDbFileLocator: void cleanUp(java.io.File)>
<org.androidannotations.api.BackgroundExecutor: void <clinit>()>
<eu.lp0.slf4j.android.LogAdapter: void __debug(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void show(java.util.List)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: android.view.View internalFindViewById(int)>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: java.lang.String[] selectColumns()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: int getItemCount()>
<org.androidannotations.api.view.OnViewChangedNotifier: void notifyViewChanged(org.androidannotations.api.view.HasViews)>
<io.github.easyintent.quickref.data.ReferenceItem: void setId(java.lang.String)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void load()>
<org.slf4j.LoggerFactory: void bind()>
<eu.lp0.slf4j.android.LoggerConfig$ShowName: void <init>(java.lang.String,int)>
<org.slf4j.helpers.Util: boolean safeGetBooleanSystemProperty(java.lang.String)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void showList(io.github.easyintent.quickref.data.ReferenceItem)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$1: void run()>
<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel valueOf(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: boolean isTraceEnabled()>
<eu.lp0.slf4j.android.LoggerConfig: boolean isComplete()>
<io.github.easyintent.quickref.QuickRefActivity: void <init>()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void <init>(java.util.List,io.github.easyintent.quickref.fragment.AdapterListener)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: boolean allowBack()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$3: void <init>(io.github.easyintent.quickref.fragment.ReferenceListFragmentEx,java.lang.String,long,java.lang.String,io.github.easyintent.quickref.repository.RepositoryFactory,java.lang.String)>
<io.github.easyintent.quickref.MainActivity: void initFragment()>
<io.github.easyintent.quickref.MainActivity$1: void <init>(io.github.easyintent.quickref.MainActivity,android.view.MenuItem)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onCreate(android.os.Bundle)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder: void <init>(io.github.easyintent.quickref.adapter.ReferenceItemAdapter,android.view.View)>
<io.github.easyintent.quickref.repository.AssetsDbFileLocator: void <clinit>()>
<org.slf4j.impl.StaticLoggerBinder: void <clinit>()>
<org.androidannotations.api.BackgroundExecutor: void execute(org.androidannotations.api.BackgroundExecutor$Task)>
<org.androidannotations.api.BackgroundExecutor: java.util.concurrent.Future directExecute(java.lang.Runnable,long)>
<eu.lp0.slf4j.android.CategoryMap: void <init>()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder: void onClick(android.view.View)>
<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] values()>
<org.slf4j.helpers.SubstituteLoggerFactory: void clear()>
<org.slf4j.helpers.SubstituteLoggerFactory: java.util.concurrent.LinkedBlockingQueue getEventQueue()>
<org.androidannotations.api.view.OnViewChangedNotifier: void <init>()>
<io.github.easyintent.quickref.QuickRefActivity: io.github.easyintent.quickref.fragment.ReferenceListFragment createReferenceListFragment()>
<io.github.easyintent.quickref.repository.RepositoryFactory: io.github.easyintent.quickref.repository.RepositoryFactory newInstance(android.content.Context)>
<org.androidannotations.api.BackgroundExecutor$Task: void <init>(java.lang.String,long,java.lang.String)>
<eu.lp0.slf4j.android.LoggerFactory: void <init>()>
<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName[] values()>
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: void <init>(android.content.Context,io.github.easyintent.quickref.repository.DbFileLocator)>
<io.github.easyintent.quickref.repository.SqliteRepositoryFactory: io.github.easyintent.quickref.repository.ReferenceRepository createCategoryRepository()>
<eu.lp0.slf4j.android.LoggerConfig: void <init>(java.lang.String)>
<eu.lp0.slf4j.android.LoggerFactory: eu.lp0.slf4j.android.LoggerConfig getConfig(java.lang.String)>
<io.github.easyintent.quickref.data.ReferenceItem: void setCommand(java.lang.String)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>
<org.slf4j.impl.StaticLoggerBinder: void <init>()>
<org.slf4j.LoggerFactory: boolean isAndroid()>
<io.github.easyintent.quickref.data.ReferenceItem: void setLeaf(boolean)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder: void updateSelectionOverlay(io.github.easyintent.quickref.data.ReferenceItem)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void onViewCreated(android.view.View,android.os.Bundle)>
<io.github.easyintent.quickref.repository.SqliteRepositoryFactory: void <init>(android.content.Context)>
<org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>
<org.androidannotations.api.view.OnViewChangedNotifier: org.androidannotations.api.view.OnViewChangedNotifier replaceNotifier(org.androidannotations.api.view.OnViewChangedNotifier)>
<io.github.easyintent.quickref.QuickRefActivity: void onBackPressed()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$1: void <init>(io.github.easyintent.quickref.fragment.ReferenceListFragmentEx,boolean,java.util.List,java.lang.String)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void <init>()>
<org.slf4j.LoggerFactory: void versionSanityCheck()>
<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>
<eu.lp0.slf4j.android.LogLevel: void <clinit>()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void onBindViewHolder(io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder,int)>
<org.slf4j.helpers.FormattingTuple: void <clinit>()>
<eu.lp0.slf4j.android.LoggerConfig: void <init>()>
<org.slf4j.helpers.FormattingTuple: void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable)>
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.androidannotations.api.UiThreadExecutor: void <clinit>()>
<io.github.easyintent.quickref.data.ReferenceItem: java.lang.String getTitle()>
<io.github.easyintent.quickref.QuickRefActivityEx: void init_(android.os.Bundle)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void setListShown(boolean)>
<org.slf4j.helpers.SubstituteLoggerFactory: void <init>()>
<io.github.easyintent.quickref.QuickRefActivity: void onCreate(android.os.Bundle)>
<org.slf4j.LoggerFactory: void performInitialization()>
<org.slf4j.LoggerFactory: void replayEvents()>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: void close(android.database.sqlite.SQLiteDatabase)>
<io.github.easyintent.quickref.QuickRefActivityEx: void <init>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void <clinit>()>
<org.slf4j.helpers.MessageFormatter: boolean isEscapedDelimeter(java.lang.String,int)>
<org.slf4j.helpers.NOPLoggerFactory: void <init>()>
<org.slf4j.LoggerFactory: void fixSubstituteLoggers()>
<org.androidannotations.api.BackgroundExecutor$1: void <init>()>
<eu.lp0.slf4j.android.LogLevel: void <init>(java.lang.String,int)>
<io.github.easyintent.quickref.MainActivity: void <clinit>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void showDetail(io.github.easyintent.quickref.data.ReferenceItem)>
<org.androidannotations.api.UiThreadExecutor$1: void <init>(android.os.Looper)>
<org.androidannotations.api.BackgroundExecutor$Task: void run()>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: void <clinit>()>
<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: eu.lp0.slf4j.android.LogLevel getNativeLogLevel()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: boolean isSelectionMode()>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: void close(android.database.Cursor)>
<io.github.easyintent.quickref.MainActivityEx: void init_(android.os.Bundle)>
<org.androidannotations.api.view.OnViewChangedNotifier: void registerOnViewChangedListener(org.androidannotations.api.view.OnViewChangedListener)>
<eu.lp0.slf4j.android.CategoryMap: eu.lp0.slf4j.android.LoggerConfig get(java.lang.String)>
<io.github.easyintent.quickref.QuickRefActivity: android.content.Intent newListIntent(android.content.Context,java.lang.String,java.lang.String)>
<eu.lp0.slf4j.android.LoggerConfig: void <init>(eu.lp0.slf4j.android.LogLevel)>
<io.github.easyintent.quickref.data.ReferenceItem: java.lang.String getCommand()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$3: void execute()>
<eu.lp0.slf4j.android.CategoryMap: void put(java.lang.String,eu.lp0.slf4j.android.LoggerConfig)>
<io.github.easyintent.quickref.data.ReferenceItem: void setSummary(java.lang.String)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void <clinit>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void onLoadDone(boolean,java.util.List,java.lang.String)>
<io.github.easyintent.quickref.repository.AssetsDbFileLocator: void <init>(android.content.Context)>
<eu.lp0.slf4j.android.LoggerFactory: void <clinit>()>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void onViewChanged(org.androidannotations.api.view.HasViews)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<eu.lp0.slf4j.android.LogAdapter: void __debugFormat(java.lang.String,java.lang.Object[])>

---------- Methods Not Visited (954) ----------
<io.github.easyintent.quickref.fragment.AdapterListener: void onItemTap(java.lang.Object,int)>
<org.androidannotations.annotations.sharedpreferences.SharedPref$Scope: org.androidannotations.annotations.sharedpreferences.SharedPref$Scope valueOf(java.lang.String)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
<org.slf4j.MarkerFactory: org.slf4j.Marker getDetachedMarker(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger getEventRecordingLogger()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,long)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,long[])>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extras(android.content.Intent)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,short)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void <init>()>
<org.androidannotations.api.ViewServer: boolean writeValue(java.net.Socket,java.lang.String)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: void addSelectedItemsToFavorites()>
<org.androidannotations.api.builder.ServiceIntentBuilder: void <init>(android.content.Context,java.lang.Class)>
<org.slf4j.event.EventRecodingLogger: boolean isWarnEnabled(org.slf4j.Marker)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onSelectedItemsChanged()>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,java.lang.CharSequence)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$2: void execute()>
<org.slf4j.helpers.MessageFormatter: void longArrayAppend(java.lang.StringBuilder,long[])>
<org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>
<org.slf4j.helpers.MarkerIgnoringBase: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.MainActivity: boolean onNavigationItemSelected(android.view.MenuItem)>
<eu.lp0.slf4j.android.LogAdapter: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.repository.RepositoryFactory: io.github.easyintent.quickref.repository.ReferenceRepository createCategoryRepository()>
<org.androidannotations.api.ViewServer: org.androidannotations.api.ViewServer get(android.content.Context)>
<org.slf4j.MDC: void setContextMap(java.util.Map)>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.BooleanPrefEditorField booleanField(java.lang.String)>
<org.slf4j.event.SubstituteLoggingEvent: long getTimeStamp()>
<org.androidannotations.api.ViewServer: void addWindow(android.view.View,java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.MDC$MDCCloseable: void <init>(java.lang.String)>
<org.slf4j.helpers.NOPLogger: boolean isWarnEnabled()>
<org.androidannotations.annotations.WakeLock$Flag: org.androidannotations.annotations.WakeLock$Flag valueOf(java.lang.String)>
<io.github.easyintent.quickref.fragment.AboutFragment: void linkClicked()>
<org.androidannotations.annotations.WakeLock$Flag: void <init>(java.lang.String,int)>
<org.androidannotations.api.ViewServer$NoopViewServer: void <init>(org.androidannotations.api.ViewServer$1)>
<org.slf4j.helpers.MarkerIgnoringBase: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,byte[])>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: void <init>(io.github.easyintent.quickref.fragment.ReferenceListFragment)>
<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.Logger: boolean isWarnEnabled(org.slf4j.Marker)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void endSelectionMode()>
<org.androidannotations.annotations.Receiver$RegisterAt: org.androidannotations.annotations.Receiver$RegisterAt[] values()>
<org.androidannotations.annotations.UiThread$Propagation: org.androidannotations.annotations.UiThread$Propagation[] values()>
<org.slf4j.LoggerFactory: void <init>()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,char[])>
<org.androidannotations.api.sharedpreferences.BooleanPrefField: void putInternal(java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$1: void <init>(io.github.easyintent.quickref.fragment.FavoriteListFragmentEx,boolean,java.util.List,java.lang.String)>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_ parentId(java.lang.String)>
<org.androidannotations.api.sharedpreferences.LongPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper put(long)>
<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,double)>
<org.androidannotations.api.ViewServer$NoopViewServer: void removeWindow(android.app.Activity)>
<org.slf4j.event.SubstituteLoggingEvent: void setLoggerName(java.lang.String)>
<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.ViewServer: void <init>()>
<eu.lp0.slf4j.android.LogAdapter: void info(java.lang.String,java.lang.Object[])>
<org.androidannotations.api.support.content.AbstractBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<org.slf4j.Logger: boolean isInfoEnabled()>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder stringArrayListArg(java.lang.String,java.util.ArrayList)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(android.os.Bundle)>
<org.androidannotations.api.sharedpreferences.IntPrefField: void putInternal(java.lang.Object)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)>
<org.slf4j.helpers.SubstituteLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<eu.lp0.slf4j.android.LogAdapter: void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.AboutFragment: void afterViews()>
<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onResume()>
<org.slf4j.event.EventRecodingLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.annotations.Receiver$RegisterAt: void <init>(java.lang.String,int)>
<org.androidannotations.api.BackgroundExecutor$1: void onBgExpected(java.lang.String[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$2: void <init>(io.github.easyintent.quickref.fragment.FavoriteListFragmentEx,java.lang.String,long,java.lang.String,io.github.easyintent.quickref.repository.RepositoryFactory,io.github.easyintent.quickref.config.FavoriteConfig)>
<org.slf4j.helpers.BasicMDCAdapter: java.lang.String get(java.lang.String)>
<org.androidannotations.api.sharedpreferences.FloatPrefField: void putInternal(java.lang.Float)>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: java.lang.Object get()>
<org.slf4j.helpers.BasicMDCAdapter: void remove(java.lang.String)>
<org.slf4j.helpers.BasicMarkerFactory: boolean exists(java.lang.String)>
<org.androidannotations.api.BackgroundExecutor: org.androidannotations.api.BackgroundExecutor$Task take(java.lang.String)>
<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.ViewServer$ViewServerWorker: boolean getFocusedWindow(java.net.Socket)>
<io.github.easyintent.quickref.fragment.MessageDialogFragment: void <init>()>
<org.androidannotations.api.sharedpreferences.BooleanPrefField: java.lang.Object getOr(java.lang.Object)>
<io.github.easyintent.quickref.fragment.Dialog: void info(androidx.fragment.app.FragmentManager,java.lang.String,java.lang.String)>
<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName valueOf(java.lang.String)>
<org.slf4j.event.SubstituteLoggingEvent: void setArgumentArray(java.lang.Object[])>
<io.github.easyintent.quickref.fragment.AboutFragmentEx$FragmentBuilder_: void <init>()>
<org.slf4j.event.SubstituteLoggingEvent: void setMessage(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled(org.slf4j.Marker)>
<org.slf4j.event.EventRecodingLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: void info(org.slf4j.Marker,java.lang.String)>
<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: void <init>(android.content.Context)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: void <init>(io.github.easyintent.quickref.fragment.FavoriteListFragment)>
<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: org.androidannotations.api.sharedpreferences.StringPrefField stringField(java.lang.String,java.lang.String)>
<io.github.easyintent.quickref.data.ReferenceItem: boolean equals(java.lang.Object)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,char)>
<org.androidannotations.api.sharedpreferences.AbstractPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void info(java.lang.String,java.lang.Throwable)>
<org.androidannotations.annotations.IgnoreWhen$State: void <init>(java.lang.String,int)>
<eu.lp0.slf4j.android.LogAdapter: void debug(java.lang.String,java.lang.Object[])>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder category(java.lang.String)>
<org.slf4j.helpers.BasicMDCAdapter$1: java.util.Map childValue(java.util.Map)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder: boolean onLongClick(android.view.View)>
<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void removeItemSelection(io.github.easyintent.quickref.data.ReferenceItem)>
<org.slf4j.IMarkerFactory: org.slf4j.Marker getMarker(java.lang.String)>
<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.AbstractPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper remove()>
<org.slf4j.event.EventRecodingLogger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>
<eu.lp0.slf4j.android.LogAdapter: void __trace(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: org.androidannotations.api.sharedpreferences.LongPrefField longField(java.lang.String,long)>
<org.slf4j.impl.StaticMDCBinder: void <clinit>()>
<org.slf4j.MDC: java.lang.String get(java.lang.String)>
<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.ViewServer$NoopViewServer: void <init>()>
<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String)>
<io.github.easyintent.quickref.fragment.AboutFragment: void <init>()>
<io.github.easyintent.quickref.config.FavoriteConfig: android.content.SharedPreferences getSetting()>
<org.slf4j.helpers.BasicMarkerFactory: org.slf4j.Marker getMarker(java.lang.String)>
<org.slf4j.helpers.MessageFormatter: void <init>()>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void <init>()>
<eu.lp0.slf4j.android.LogAdapter: void __warn(java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.SubstituteLogger: boolean isDelegateNOP()>
<org.androidannotations.api.ViewServer$NoopViewServer: boolean isRunning()>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.IntPrefEditorField intField(java.lang.String)>
<org.slf4j.spi.MDCAdapter: java.lang.String get(java.lang.String)>
<org.androidannotations.annotations.IgnoreWhen$State: void <clinit>()>
<org.slf4j.LoggerFactory: void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)>
<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.impl.StaticMDCBinder: void <init>()>
<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void onMultiSelectionStart()>
<org.androidannotations.api.ViewServer$ViewServerWorker: void run()>
<io.github.easyintent.quickref.util.ReferenceListSelection: java.util.List getSelectedIds(java.util.Set)>
<org.androidannotations.api.ViewServer$ViewServerWorker: void windowsChanged()>
<org.slf4j.MDC: org.slf4j.spi.MDCAdapter getMDCAdapter()>
<org.androidannotations.annotations.sharedpreferences.SharedPref$Scope: void <clinit>()>
<org.androidannotations.api.sharedpreferences.StringSetPrefField: java.util.Set getOr(java.util.Set)>
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>
<org.slf4j.MarkerFactory: org.slf4j.Marker getMarker(java.lang.String)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,boolean)>
<org.androidannotations.api.view.OnViewChangedListener: void onViewChanged(org.androidannotations.api.view.HasViews)>
<org.androidannotations.annotations.WakeLock$Flag: org.androidannotations.annotations.WakeLock$Flag[] values()>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.FavoriteListFragment build()>
<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: void onViewChanged(org.androidannotations.api.view.HasViews)>
<org.slf4j.Logger: void info(java.lang.String)>
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onMultiSelectionStart()>
<org.androidannotations.api.BackgroundExecutor$2: void <init>(java.lang.String,long,java.lang.String,java.lang.Runnable)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,byte)>
<org.slf4j.IMarkerFactory: org.slf4j.Marker getDetachedMarker(java.lang.String)>
<org.slf4j.event.SubstituteLoggingEvent: void setLogger(org.slf4j.helpers.SubstituteLogger)>
<eu.lp0.slf4j.android.LogAdapter: void error(java.lang.String)>
<io.github.easyintent.quickref.config.FavoriteConfig: void add(java.util.List)>
<org.androidannotations.annotations.UiThread$Propagation: void <clinit>()>
<org.slf4j.impl.StaticMarkerBinder: java.lang.String getMarkerFactoryClassStr()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,boolean[])>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.StringSetPrefEditorField stringSetField(java.lang.String)>
<org.androidannotations.api.builder.ActivityIntentBuilder: void <init>(android.content.Context,android.content.Intent)>
<org.slf4j.helpers.MarkerIgnoringBase: void info(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: int hashCode()>
<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.MessageFormatter: java.lang.Object[] trimmedCopy(java.lang.Object[])>
<io.github.easyintent.quickref.data.ReferenceItem: java.lang.String getParentId()>
<org.slf4j.helpers.BasicMarker: boolean hasChildren()>
<org.slf4j.helpers.SubstituteLogger: boolean isErrorEnabled()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder type(java.lang.String)>
<org.androidannotations.api.support.content.AbstractBroadcastReceiver: void <init>()>
<eu.lp0.slf4j.android.LogAdapter: void trace(java.lang.String,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.sharedpreferences.StringPrefField: void putInternal(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void setDelegate(org.slf4j.Logger)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: void search(io.github.easyintent.quickref.repository.RepositoryFactory,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void warn(java.lang.String)>
<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.event.Level getLevel()>
<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.MessageDialogFragment$Listener: void onOkClicked(io.github.easyintent.quickref.fragment.MessageDialogFragment)>
<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.helpers.Util$ClassContextSecurityManager: java.lang.Class[] getClassContext()>
<org.slf4j.LoggerFactory: void reset()>
<org.slf4j.helpers.BasicMarker: int hashCode()>
<org.slf4j.event.SubstituteLoggingEvent: java.lang.String getMessage()>
<org.slf4j.helpers.SubstituteLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.MarkerIgnoringBase: void warn(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.builder.ActivityIntentBuilder: void <init>(android.content.Context,java.lang.Class)>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_ title(java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.MessageFormatter: void charArrayAppend(java.lang.StringBuilder,char[])>
<io.github.easyintent.quickref.MainActivityEx$IntentBuilder_: void <init>(androidx.fragment.app.Fragment)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: org.androidannotations.api.sharedpreferences.BooleanPrefField booleanField(java.lang.String,boolean)>
<org.androidannotations.api.sharedpreferences.StringSetPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.util.Set)>
<io.github.easyintent.quickref.fragment.AboutFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<eu.lp0.slf4j.android.LogAdapter: void trace(org.slf4j.Marker,java.lang.String)>
<io.github.easyintent.quickref.MainActivityEx$IntentBuilder_: void <init>(android.content.Context)>
<io.github.easyintent.quickref.config.FavoriteConfig$1: int compare(java.lang.Object,java.lang.Object)>
<org.androidannotations.api.ViewServer$ViewServerWorker: void <init>(org.androidannotations.api.ViewServer,java.net.Socket)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: void init_(android.os.Bundle)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,short)>
<org.androidannotations.api.ViewServer$NoopViewServer: void setFocusedWindow(android.app.Activity)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.MessageDialogFragment build()>
<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void <clinit>()>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: void <init>()>
<org.slf4j.event.SubstituteLoggingEvent: java.lang.String getLoggerName()>
<org.slf4j.spi.MDCAdapter: void remove(java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.event.Level: int toInt()>
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Throwable)>
<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$1: void run()>
<org.slf4j.event.EventRecodingLogger: void info(org.slf4j.Marker,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void warn(java.lang.String,java.lang.Object)>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: void write(byte[])>
<org.androidannotations.api.sharedpreferences.StringPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.lang.String)>
<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List getLoggerNames()>
<org.slf4j.helpers.BasicMarkerFactory: void <init>()>
<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.BackgroundExecutor: void setExecutor(java.util.concurrent.Executor)>
<org.androidannotations.api.ViewServer$ViewServerWorker: void focusChanged()>
<org.androidannotations.api.builder.Builder: void <init>()>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: io.github.easyintent.quickref.fragment.AboutFragmentEx$FragmentBuilder_ builder()>
<io.github.easyintent.quickref.MainActivityEx$IntentBuilder_: org.androidannotations.api.builder.PostActivityStarter startForResult(int)>
<org.slf4j.helpers.MarkerIgnoringBase: void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Throwable)>
<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$FragmentBuilder_: java.lang.Object build()>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,android.util.SparseArray)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void reload()>
<org.androidannotations.api.BackgroundExecutor: void checkUiThread()>
<org.androidannotations.api.ViewServer$NoopViewServer: boolean stop()>
<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>
<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.BackgroundExecutor$WrongThreadListener: void onBgExpected(java.lang.String[])>
<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String)>
<io.github.easyintent.quickref.util.ReferenceListSelection: void <init>()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: java.util.Set getSelectedItems()>
<org.slf4j.spi.MDCAdapter: java.util.Map getCopyOfContextMap()>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: boolean exists()>
<org.slf4j.helpers.MessageFormatter: void shortArrayAppend(java.lang.StringBuilder,short[])>
<org.slf4j.event.Level: void <clinit>()>
<org.slf4j.helpers.MessageFormatter: void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map)>
<org.androidannotations.api.builder.FragmentBuilder: android.os.Bundle args()>
<org.slf4j.helpers.MessageFormatter: void floatArrayAppend(java.lang.StringBuilder,float[])>
<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.bundle.BundleHelper: void <init>()>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: java.lang.Object getOr(java.lang.Object)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_: void <init>()>
<org.slf4j.event.SubstituteLoggingEvent: void setThrowable(java.lang.Throwable)>
<org.slf4j.helpers.MessageFormatter: void byteArrayAppend(java.lang.StringBuilder,byte[])>
<org.androidannotations.api.sharedpreferences.StringSetPrefField: java.lang.Object getOr(java.lang.Object)>
<eu.lp0.slf4j.android.LogAdapter: void error(org.slf4j.Marker,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.fragment.MessageDialogFragment$1: void <init>(io.github.easyintent.quickref.fragment.MessageDialogFragment)>
<org.slf4j.helpers.MarkerIgnoringBase: void error(org.slf4j.Marker,java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: boolean isWarnEnabled(org.slf4j.Marker)>
<org.androidannotations.api.builder.PostActivityStarter: void <init>(android.content.Context)>
<io.github.easyintent.quickref.config.FavoriteConfig: java.util.List list()>
<org.slf4j.event.SubstituteLoggingEvent: void setMarker(org.slf4j.Marker)>
<eu.lp0.slf4j.android.LogAdapter: void __traceFormat(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_: java.lang.Object build()>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.MessageDialogFragmentEx$FragmentBuilder_ message(java.lang.String)>
<org.slf4j.LoggerFactory: void failedBinding(java.lang.Throwable)>
<org.androidannotations.api.sharedpreferences.IntPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.StringPrefEditorField stringField(java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.NamedLoggerBase: void <init>()>
<org.slf4j.helpers.SubstituteLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.NOPMDCAdapter: void setContextMap(java.util.Map)>
<org.slf4j.helpers.SubstituteLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.MainActivityEx: io.github.easyintent.quickref.MainActivityEx$IntentBuilder_ intent(androidx.fragment.app.Fragment)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,char[])>
<org.androidannotations.api.builder.IntentBuilder: android.content.Context getContext()>
<org.androidannotations.api.bundle.BundleHelper: android.os.Parcelable[] getParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)>
<org.slf4j.Logger: boolean isInfoEnabled(org.slf4j.Marker)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_ query(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: boolean isDebugEnabled()>
<org.slf4j.Logger: boolean isErrorEnabled(org.slf4j.Marker)>
<org.slf4j.helpers.MarkerIgnoringBase: void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.config.FavoriteConfig: void add(java.lang.String)>
<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>
<org.slf4j.MDC: void remove(java.lang.String)>
<io.github.easyintent.quickref.fragment.Dialog: void <init>()>
<io.github.easyintent.quickref.QuickRefActivityEx: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,double[])>
<org.slf4j.helpers.MarkerIgnoringBase: void info(org.slf4j.Marker,java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void warn(org.slf4j.Marker,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.StringSetPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<io.github.easyintent.quickref.repository.RepositoryException: void <init>(java.lang.Throwable)>
<eu.lp0.slf4j.android.LogAdapter: void trace(java.lang.String)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,float)>
<io.github.easyintent.quickref.QuickRefActivity: void onOkClicked(io.github.easyintent.quickref.fragment.MessageDialogFragment)>
<org.slf4j.Logger: boolean isTraceEnabled(org.slf4j.Marker)>
<org.slf4j.helpers.BasicMDCAdapter: void setContextMap(java.util.Map)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,byte)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void onViewChanged(org.androidannotations.api.view.HasViews)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,android.os.Parcelable[])>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder parcelableArrayListArg(java.lang.String,java.util.ArrayList)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>
<eu.lp0.slf4j.android.CallerStackTrace: void <clinit>()>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String)>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.LongPrefEditorField longField(java.lang.String)>
<org.slf4j.MDC: void <init>()>
<org.slf4j.event.EventRecodingLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.impl.StaticMDCBinder: org.slf4j.spi.MDCAdapter getMDCA()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,double[])>
<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>
<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>
<eu.lp0.slf4j.android.LogAdapter: boolean isTraceEnabled(org.slf4j.Marker)>
<io.github.easyintent.quickref.MainActivity: void showAbout()>
<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>
<org.slf4j.LoggerFactory: void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)>
<org.androidannotations.api.UiThreadExecutor: void <init>()>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,short[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onItemTap(io.github.easyintent.quickref.data.ReferenceItem,int)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$2: void <init>(io.github.easyintent.quickref.fragment.ReferenceListFragmentEx,java.lang.String,long,java.lang.String,io.github.easyintent.quickref.repository.RepositoryFactory,java.lang.String)>
<org.slf4j.helpers.NOPLogger: void info(java.lang.String)>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: void <init>(android.app.Fragment)>
<org.androidannotations.api.sharedpreferences.FloatPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.lang.Float)>
<org.slf4j.helpers.SubstituteLogger: boolean isDelegateEventAware()>
<org.slf4j.helpers.MarkerIgnoringBase: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<eu.lp0.slf4j.android.LogAdapter: void trace(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.MessageFormatter: boolean isDoubleEscaped(java.lang.String,int)>
<eu.lp0.slf4j.android.LogAdapter: void info(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.builder.FragmentBuilder: void <init>()>
<org.androidannotations.api.ViewServer$NoopViewServer: void setFocusedWindow(android.view.View)>
<org.androidannotations.api.builder.IntentBuilder: void <init>(android.content.Context,android.content.Intent)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: android.view.View internalFindViewById(int)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,boolean)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>
<org.slf4j.Logger: void trace(java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: boolean isErrorEnabled(org.slf4j.Marker)>
<org.androidannotations.api.BackgroundExecutor: void setWrongThreadListener(org.androidannotations.api.BackgroundExecutor$WrongThreadListener)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: void deleteFromFavorites()>
<org.slf4j.event.EventRecodingLogger: boolean isErrorEnabled()>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,java.lang.String[])>
<org.slf4j.helpers.NOPMDCAdapter: void <init>()>
<org.slf4j.Logger: void warn(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.LoggerFactory: boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)>
<org.androidannotations.api.BackgroundExecutor: void execute(java.lang.Runnable,java.lang.String,long,java.lang.String)>
<org.slf4j.event.EventRecodingLogger: boolean isErrorEnabled(org.slf4j.Marker)>
<org.slf4j.event.EventRecodingLogger: boolean isInfoEnabled()>
<org.slf4j.helpers.NOPLogger: boolean isErrorEnabled()>
<org.slf4j.helpers.FormattingTuple: java.lang.Object[] getArgArray()>
<org.slf4j.event.EventRecodingLogger: void trace(java.lang.String)>
<org.slf4j.helpers.BasicMarker: void add(org.slf4j.Marker)>
<org.slf4j.Marker: java.lang.String getName()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder flags(int)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void init_(android.os.Bundle)>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: void <init>(java.io.OutputStream)>
<org.slf4j.event.EventRecodingLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.helpers.NOPLogger: void <init>()>
<io.github.easyintent.quickref.fragment.AboutFragment: void showVersion(android.content.Context)>
<org.slf4j.impl.StaticMDCBinder: java.lang.String getMDCAdapterClassStr()>
<org.androidannotations.api.sharedpreferences.SetXmlSerializer: java.lang.String serialize(java.util.Set)>
<eu.lp0.slf4j.android.CallerStackTrace: void <init>(int)>
<org.slf4j.helpers.SubstituteLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,byte[])>
<io.github.easyintent.quickref.repository.RepositoryException: void <init>(java.lang.String)>
<org.slf4j.event.SubstituteLoggingEvent: void <init>()>
<org.slf4j.helpers.NOPMDCAdapter: void put(java.lang.String,java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.Dialog: void info(androidx.appcompat.app.AppCompatActivity,java.lang.String,java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: boolean isTraceEnabled()>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: org.androidannotations.api.sharedpreferences.FloatPrefField floatField(java.lang.String,float)>
<io.github.easyintent.quickref.MainActivity$1: boolean onQueryTextSubmit(java.lang.String)>
<org.slf4j.event.EventRecodingLogger: boolean isTraceEnabled()>
<io.github.easyintent.quickref.config.FavoriteConfig: void delete(java.util.List)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: void injectFragmentArguments_()>
<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>
<org.slf4j.MDC: void <clinit>()>
<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.helpers.SubstituteLogger getLogger()>
<org.slf4j.impl.StaticMDCBinder: org.slf4j.impl.StaticMDCBinder getSingleton()>
<org.slf4j.helpers.NOPLogger: boolean isTraceEnabled()>
<io.github.easyintent.quickref.fragment.MessageDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_ builder()>
<org.androidannotations.api.ViewServer: boolean stop()>
<org.slf4j.helpers.MarkerIgnoringBase: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.MainActivityEx: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<eu.lp0.slf4j.android.LogAdapter: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: void put(java.lang.Object)>
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: void onViewCreated(android.view.View,android.os.Bundle)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: void init_(android.os.Bundle)>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: void remove()>
<org.androidannotations.api.sharedpreferences.FloatPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: boolean isErrorEnabled()>
<eu.lp0.slf4j.android.LogAdapter: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.MarkerIgnoringBase: boolean isInfoEnabled(org.slf4j.Marker)>
<org.slf4j.MDC$MDCCloseable: void close()>
<org.androidannotations.api.UiThreadExecutor: void decrementToken(org.androidannotations.api.UiThreadExecutor$Token)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment: io.github.easyintent.quickref.fragment.ReferenceListFragment newSearchInstance(java.lang.String)>
<org.slf4j.helpers.BasicMarker: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MarkerIgnoringBase: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: boolean isDebugEnabled(org.slf4j.Marker)>
<org.slf4j.LoggerFactory: void emitReplayWarning(int)>
<org.androidannotations.annotations.EBean$Scope: org.androidannotations.annotations.EBean$Scope[] values()>
<org.slf4j.helpers.SubstituteLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void showChildren(io.github.easyintent.quickref.data.ReferenceItem)>
<org.androidannotations.annotations.sharedpreferences.SharedPref$Scope: void <init>(java.lang.String,int)>
<org.slf4j.event.EventRecodingLogger: void trace(java.lang.String,java.lang.Object)>
<org.androidannotations.annotations.UiThread$Propagation: void <init>(java.lang.String,int)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: void onViewCreated(android.view.View,android.os.Bundle)>
<org.androidannotations.annotations.IgnoreWhen$State: org.androidannotations.annotations.IgnoreWhen$State[] values()>
<org.slf4j.helpers.SubstituteLogger: void debug(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.ViewServer: void <init>(int)>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: void write(byte[],int,int)>
<eu.lp0.slf4j.android.LogAdapter: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,java.lang.String[])>
<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.ViewServer$NoopViewServer: void run()>
<eu.lp0.slf4j.android.CallerStackTrace: java.lang.String toString()>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: void putStringSet(android.content.SharedPreferences$Editor,java.lang.String,java.util.Set)>
<io.github.easyintent.quickref.config.FavoriteConfig: void delete(java.lang.String)>
<org.slf4j.helpers.NOPLogger: void <clinit>()>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void onDestroyView()>
<org.slf4j.helpers.SubstituteLogger: boolean isWarnEnabled()>
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.MainActivityEx: io.github.easyintent.quickref.MainActivityEx$IntentBuilder_ intent(android.content.Context)>
<org.androidannotations.api.ViewServer: boolean start()>
<org.androidannotations.api.ViewServer: void fireWindowsChangedEvent()>
<org.slf4j.helpers.MarkerIgnoringBase: void debug(org.slf4j.Marker,java.lang.String)>
<org.slf4j.event.SubstituteLoggingEvent: java.lang.String getThreadName()>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: java.util.List listByIds(java.util.List)>
<org.androidannotations.annotations.EBean$Scope: void <init>(java.lang.String,int)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void startSelectionMode()>
<org.androidannotations.api.sharedpreferences.EditorHelper: android.content.SharedPreferences$Editor getEditor()>
<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>()>
<org.slf4j.event.EventRecodingLogger: void trace(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.Intents: void <init>()>
<org.slf4j.helpers.BasicMDCAdapter: void put(java.lang.String,java.lang.String)>
<org.androidannotations.api.ViewServer$NoopViewServer: void addWindow(android.view.View,java.lang.String)>
<org.androidannotations.api.sharedpreferences.SetXmlSerializer: void <init>()>
<org.androidannotations.annotations.sharedpreferences.SharedPref$Scope: org.androidannotations.annotations.sharedpreferences.SharedPref$Scope[] values()>
<org.androidannotations.api.sharedpreferences.StringPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<org.androidannotations.api.sharedpreferences.StringSetPrefField: void putInternal(java.util.Set)>
<eu.lp0.slf4j.android.LogAdapter: boolean isDebugEnabled(org.slf4j.Marker)>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.lang.Object)>
<eu.lp0.slf4j.android.LogAdapter: void info(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.QuickRefActivity: android.content.Intent newSearchIntent(android.content.Context,java.lang.String)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx$FragmentBuilder_: java.lang.Object build()>
<org.androidannotations.api.sharedpreferences.LongPrefField: void putInternal(java.lang.Long)>
<org.slf4j.Logger: boolean isTraceEnabled()>
<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<org.androidannotations.api.UiThreadExecutor$Token: void <init>(java.lang.String,org.androidannotations.api.UiThreadExecutor$1)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx$FragmentBuilder_: void <init>()>
<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>
<org.slf4j.event.EventRecodingLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx$1: void onClick(android.view.View)>
<org.slf4j.Marker: boolean contains(java.lang.String)>
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object[])>
<eu.lp0.slf4j.android.LogAdapter: void debug(java.lang.String)>
<org.androidannotations.api.UiThreadExecutor$Token: void <init>(java.lang.String)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>
<org.androidannotations.annotations.EBean$Scope: void <clinit>()>
<org.slf4j.event.EventRecodingLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.MarkerIgnoringBase: java.lang.String toString()>
<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<org.slf4j.MDC: org.slf4j.MDC$MDCCloseable putCloseable(java.lang.String,java.lang.String)>
<org.androidannotations.annotations.IgnoreWhen$State: org.androidannotations.annotations.IgnoreWhen$State valueOf(java.lang.String)>
<io.github.easyintent.quickref.MainActivity: void showFavorites()>
<org.slf4j.helpers.BasicMDCAdapter$1: void <init>(org.slf4j.helpers.BasicMDCAdapter)>
<org.slf4j.helpers.NOPLogger: java.lang.String getName()>
<org.slf4j.Logger: boolean isDebugEnabled(org.slf4j.Marker)>
<org.slf4j.event.EventRecodingLogger: boolean isDebugEnabled()>
<org.androidannotations.api.sharedpreferences.IntPrefField: java.lang.Object getOr(java.lang.Object)>
<eu.lp0.slf4j.android.LogAdapter: boolean isWarnEnabled()>
<org.androidannotations.api.ViewServer: boolean isRunning()>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.EditorHelper clear()>
<org.androidannotations.annotations.ResId: void <init>()>
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void info(java.lang.String)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void onLoadDone(boolean,java.util.List,java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled(org.slf4j.Marker)>
<eu.lp0.slf4j.android.LogAdapter: void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onCreate(android.os.Bundle)>
<org.slf4j.helpers.NOPLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void error(org.slf4j.Marker,java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>
<org.slf4j.event.EventRecodingLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.api.ViewServer: void removeWindow(android.view.View)>
<org.slf4j.event.EventRecodingLogger: void error(java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.NOPMDCAdapter: java.lang.String get(java.lang.String)>
<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void loadList(io.github.easyintent.quickref.repository.RepositoryFactory,io.github.easyintent.quickref.config.FavoriteConfig)>
<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.annotations.WakeLock$Level: org.androidannotations.annotations.WakeLock$Level[] values()>
<org.slf4j.helpers.BasicMarker: void <clinit>()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,android.os.Parcelable)>
<org.slf4j.spi.MDCAdapter: void setContextMap(java.util.Map)>
<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>(org.slf4j.helpers.Util$1)>
<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.repository.SqliteReferenceRepository: java.util.List search(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.ViewServer$ViewServerWorker: boolean windowCommand(java.net.Socket,java.lang.String,java.lang.String)>
<io.github.easyintent.quickref.MainActivity: void search(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.MarkerIgnoringBase: void error(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object[])>
<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement get()>
<org.slf4j.helpers.NamedLoggerBase: java.lang.String getName()>
<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.MDC: org.slf4j.spi.MDCAdapter bwCompatibleGetMDCAdapterFromBinder()>
<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.MDC: void clear()>
<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: java.lang.String toString()>
<io.github.easyintent.quickref.config.FavoriteConfig$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>
<org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>
<org.slf4j.Logger: void error(java.lang.String)>
<io.github.easyintent.quickref.MainActivityEx: io.github.easyintent.quickref.MainActivityEx$IntentBuilder_ intent(android.app.Fragment)>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: org.androidannotations.api.builder.PostActivityStarter startForResult(int)>
<org.slf4j.MDC: void put(java.lang.String,java.lang.String)>
<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String)>
<io.github.easyintent.quickref.QuickRefActivityEx: void setContentView(android.view.View)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,android.os.Bundle)>
<org.slf4j.helpers.Util: void report(java.lang.String)>
<org.slf4j.helpers.NamedLoggerBase: java.lang.Object readResolve()>
<org.androidannotations.api.sharedpreferences.LongPrefField: java.lang.Long getOr(java.lang.Long)>
<org.androidannotations.api.sharedpreferences.BooleanPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.lang.Boolean)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: org.androidannotations.api.sharedpreferences.StringSetPrefField stringSetField(java.lang.String,java.util.Set)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: android.view.View internalFindViewById(int)>
<io.github.easyintent.quickref.fragment.MessageDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_ query(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.event.Level: org.slf4j.event.Level[] values()>
<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object[])>
<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder stringArrayListExtra(java.lang.String,java.util.ArrayList)>
<org.androidannotations.annotations.WakeLock$Level: void <clinit>()>
<org.androidannotations.api.ViewServer: void addWindow(android.app.Activity)>
<org.slf4j.helpers.NOPLogger: void error(java.lang.String)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: android.content.SharedPreferences getSharedPreferences()>
<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: void onDestroyView()>
<eu.lp0.slf4j.android.LogAdapter: void warn(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.BasicMarker: boolean hasReferences()>
<io.github.easyintent.quickref.config.FavoriteConfig: void clear()>
<io.github.easyintent.quickref.fragment.AboutFragmentEx$FragmentBuilder_: java.lang.Object build()>
<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String)>
<io.github.easyintent.quickref.MainActivity: void onOkClicked(io.github.easyintent.quickref.fragment.MessageDialogFragment)>
<org.slf4j.helpers.SubstituteLogger: void trace(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.ViewServer$ViewServerWorker: android.view.View findWindow(int)>
<org.slf4j.spi.MDCAdapter: void clear()>
<org.slf4j.event.Level: org.slf4j.event.Level valueOf(java.lang.String)>
<io.github.easyintent.quickref.data.ReferenceItem: int hashCode()>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: void onCreate(android.os.Bundle)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: void <init>()>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void loadList(io.github.easyintent.quickref.repository.RepositoryFactory,io.github.easyintent.quickref.config.FavoriteConfig)>
<org.slf4j.helpers.MarkerIgnoringBase: void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,android.os.Bundle)>
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<io.github.easyintent.quickref.data.ReferenceItem: boolean isLeaf()>
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object[])>
<eu.lp0.slf4j.android.LogAdapter: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.MDC: java.util.Map getCopyOfContextMap()>
<org.slf4j.helpers.SubstituteLogger: void error(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.BackgroundExecutor$1: void onUiExpected()>
<eu.lp0.slf4j.android.LogAdapter: void trace(java.lang.String,java.lang.Throwable)>
<org.slf4j.event.EventRecodingLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.api.builder.ActivityIntentBuilder: org.androidannotations.api.builder.PostActivityStarter startForResult(int)>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: void apply(android.content.SharedPreferences$Editor)>
<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.AdapterListener: void onSelectedItemsChanged()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,java.lang.CharSequence)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,long)>
<org.slf4j.helpers.SubstituteLogger: boolean isWarnEnabled(org.slf4j.Marker)>
<org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: void close()>
<org.slf4j.event.EventRecodingLogger: void debug(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.ViewServer: void removeWindow(android.app.Activity)>
<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.AboutFragment: io.github.easyintent.quickref.fragment.AboutFragment newInstance()>
<org.androidannotations.api.sharedpreferences.LongPrefField: void putInternal(java.lang.Object)>
<org.androidannotations.api.BackgroundExecutor: void <init>()>
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String)>
<org.slf4j.event.Level: java.lang.String toString()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,int[])>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: void putInternal(java.lang.Object)>
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object[])>
<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,float[])>
<org.slf4j.Marker: boolean contains(org.slf4j.Marker)>
<org.androidannotations.api.ViewServer: void run()>
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<org.slf4j.LoggerFactory: void reportMultipleBindingAmbiguity(java.util.Set)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>
<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<eu.lp0.slf4j.android.LogAdapter: void __info(java.lang.String,java.lang.Throwable)>
<eu.lp0.slf4j.android.LogAdapter: void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.api.ViewServer$NoopViewServer: void addWindow(android.app.Activity)>
<org.slf4j.helpers.SubstituteLogger: java.lang.String getName()>
<org.androidannotations.annotations.UiThread$Propagation: org.androidannotations.annotations.UiThread$Propagation valueOf(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onActivityCreated(android.os.Bundle)>
<org.androidannotations.api.sharedpreferences.StringSetPrefField: void putInternal(java.lang.Object)>
<org.androidannotations.api.ViewServer: void <init>(org.androidannotations.api.ViewServer$1)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void addItemSelection(io.github.easyintent.quickref.data.ReferenceItem)>
<org.slf4j.LoggerFactory: boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)>
<org.androidannotations.api.ViewServer: void setFocusedWindow(android.view.View)>
<io.github.easyintent.quickref.repository.RepositoryException: void <init>(java.lang.String,java.lang.Throwable)>
<eu.lp0.slf4j.android.LogAdapter: void trace(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.ViewServer: void fireFocusChangedEvent()>
<org.androidannotations.annotations.Receiver$RegisterAt: org.androidannotations.annotations.Receiver$RegisterAt valueOf(java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,long[])>
<org.androidannotations.api.sharedpreferences.EditorHelper: void apply()>
<io.github.easyintent.quickref.fragment.AboutFragment: void onActivityCreated(android.os.Bundle)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,java.io.Serializable)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void show(java.util.List)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: android.view.View internalFindViewById(int)>
<org.androidannotations.api.sharedpreferences.EditorHelper: void <init>(android.content.SharedPreferences)>
<org.slf4j.event.EventRecodingLogger: void warn(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.UiThreadExecutor: void cancelAll(java.lang.String)>
<org.slf4j.MarkerFactory: void <init>()>
<eu.lp0.slf4j.android.LogAdapter: void __errorFormat(java.lang.String,java.lang.Object[])>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: void write(int)>
<org.slf4j.event.EventRecodingLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.MarkerFactory: void <clinit>()>
<org.androidannotations.api.sharedpreferences.StringSetPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper put(java.util.Set)>
<org.slf4j.event.EventRecodingLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: boolean equals(java.lang.Object)>
<eu.lp0.slf4j.android.LogAdapter: void debug(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: void clear()>
<eu.lp0.slf4j.android.LogAdapter: void error(java.lang.String,java.lang.Throwable)>
<org.slf4j.event.SubstituteLoggingEvent: void setLevel(org.slf4j.event.Level)>
<org.slf4j.helpers.BasicMarkerFactory: org.slf4j.Marker getDetachedMarker(java.lang.String)>
<org.androidannotations.api.builder.ServiceIntentBuilder: void <init>(android.content.Context,android.content.Intent)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: io.github.easyintent.quickref.fragment.MessageDialogFragmentEx$FragmentBuilder_ builder()>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: void onDestroyView()>
<org.androidannotations.api.sharedpreferences.BooleanPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper put(boolean)>
<org.slf4j.event.EventRecodingLogger: java.lang.String getName()>
<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.Marker getMarker()>
<io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_: void <init>(androidx.fragment.app.Fragment)>
<org.androidannotations.api.ViewServer$ViewServerWorker: boolean listWindows(java.net.Socket)>
<org.slf4j.spi.MDCAdapter: void put(java.lang.String,java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,android.os.Parcelable)>
<org.androidannotations.api.sharedpreferences.LongPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: java.lang.String getName()>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void showItem(io.github.easyintent.quickref.data.ReferenceItem)>
<org.androidannotations.api.ViewServer$WindowListener: void windowsChanged()>
<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<org.slf4j.event.EventRecodingLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.annotations.Receiver$RegisterAt: void <clinit>()>
<org.slf4j.helpers.NOPMDCAdapter: java.util.Map getCopyOfContextMap()>
<eu.lp0.slf4j.android.LogAdapter: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: void <init>(android.content.SharedPreferences)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<eu.lp0.slf4j.android.LogAdapter: void warn(org.slf4j.Marker,java.lang.String)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx$1: void <init>(io.github.easyintent.quickref.fragment.AboutFragmentEx)>
<org.slf4j.Logger: boolean isWarnEnabled()>
<org.slf4j.helpers.SubstituteLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
<org.slf4j.helpers.SubstituteLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.MainActivityEx: android.view.View internalFindViewById(int)>
<org.slf4j.event.SubstituteLoggingEvent: void setTimeStamp(long)>
<org.androidannotations.api.sharedpreferences.IntPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper put(int)>
<eu.lp0.slf4j.android.LogAdapter: void __error(java.lang.String,java.lang.Throwable)>
<eu.lp0.slf4j.android.LogAdapter: void __warnFormat(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()>
<org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>
<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>
<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.BackgroundExecutor$WrongThreadListener: void onUiExpected()>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: boolean allowBack()>
<org.slf4j.helpers.BasicMarker: java.lang.String getName()>
<org.slf4j.helpers.BasicMarkerFactory: boolean detachMarker(java.lang.String)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<io.github.easyintent.quickref.QuickRefActivityEx: io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_ intent(android.app.Fragment)>
<org.slf4j.event.EventRecodingLogger: boolean isInfoEnabled(org.slf4j.Marker)>
<org.androidannotations.api.ViewServer$ViewServerWorker: void <init>(org.androidannotations.api.ViewServer,java.net.Socket,org.androidannotations.api.ViewServer$1)>
<org.androidannotations.api.BackgroundExecutor: void execute(java.lang.Runnable,long)>
<org.slf4j.Logger: void debug(java.lang.String)>
<org.slf4j.helpers.Util: java.lang.Class getCallingClass()>
<org.slf4j.helpers.MarkerIgnoringBase: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.impl.StaticMarkerBinder: void <init>()>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,float)>
<org.slf4j.helpers.NOPMDCAdapter: void remove(java.lang.String)>
<io.github.easyintent.quickref.MainActivity: void showMainFragment()>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: java.util.Set getStringSet(android.content.SharedPreferences,java.lang.String,java.util.Set)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: void onSelectedItemsChanges()>
<org.slf4j.helpers.BasicMDCAdapter$1: java.lang.Object childValue(java.lang.Object)>
<org.androidannotations.api.sharedpreferences.LongPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.lang.Long)>
<eu.lp0.slf4j.android.LogAdapter: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.FloatPrefEditorField floatField(java.lang.String)>
<io.github.easyintent.quickref.fragment.AboutFragment: void onCreate(android.os.Bundle)>
<org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,boolean[])>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_ parentId(java.lang.String)>
<org.androidannotations.api.sharedpreferences.FloatPrefField: void putInternal(java.lang.Object)>
<org.androidannotations.api.builder.ActivityIntentBuilder: org.androidannotations.api.builder.PostActivityStarter start()>
<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void onCreate(android.os.Bundle)>
<org.slf4j.ILoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder data(android.net.Uri)>
<org.slf4j.helpers.BasicMarker: boolean contains(org.slf4j.Marker)>
<org.androidannotations.api.BackgroundExecutor: void checkBgThread(java.lang.String[])>
<org.androidannotations.api.ViewServer$NoopViewServer: void removeWindow(android.view.View)>
<org.slf4j.helpers.SubstituteLogger: boolean isTraceEnabled(org.slf4j.Marker)>
<org.slf4j.helpers.MarkerIgnoringBase: boolean isDebugEnabled(org.slf4j.Marker)>
<org.slf4j.helpers.SubstituteLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$2: void execute()>
<org.androidannotations.api.sharedpreferences.BooleanPrefField: void putInternal(java.lang.Boolean)>
<org.androidannotations.api.sharedpreferences.IntPrefField: void putInternal(java.lang.Integer)>
<org.slf4j.helpers.MarkerIgnoringBase: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.event.SubstituteLoggingEvent: void setThreadName(java.lang.String)>
<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.ViewServer$NoopViewServer: boolean start()>
<org.slf4j.event.EventRecodingLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()>
<org.slf4j.helpers.MarkerIgnoringBase: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.BasicMarker: void <init>(java.lang.String)>
<org.slf4j.LoggerFactory: boolean nonMatchingClasses(java.lang.Class,java.lang.Class)>
<org.androidannotations.api.sharedpreferences.BooleanPrefField: java.lang.Boolean getOr(java.lang.Boolean)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,android.os.Parcelable[])>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_ searchMode(boolean)>
<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<io.github.easyintent.quickref.fragment.AboutFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.AboutFragment build()>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: int getSelectedItemCount()>
<org.slf4j.helpers.MessageFormatter: void booleanArrayAppend(java.lang.StringBuilder,boolean[])>
<org.slf4j.helpers.SubstituteLogger: void <init>(java.lang.String,java.util.Queue,boolean)>
<org.slf4j.helpers.SubstituteLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.Logger: java.lang.String getName()>
<org.androidannotations.api.ViewServer: void removeWindowListener(org.androidannotations.api.ViewServer$WindowListener)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder integerArrayListArg(java.lang.String,java.util.ArrayList)>
<org.androidannotations.api.ViewServer$WindowListener: void focusChanged()>
<org.slf4j.MDC$MDCCloseable: void <init>(java.lang.String,org.slf4j.MDC$1)>
<eu.lp0.slf4j.android.LogAdapter: void info(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.api.BackgroundExecutor$2: void execute()>
<org.slf4j.helpers.MarkerIgnoringBase: void <init>()>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: void flush()>
<eu.lp0.slf4j.android.LogAdapter: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,char)>
<org.androidannotations.api.builder.IntentBuilder: android.content.Intent get()>
<org.slf4j.Logger: boolean isErrorEnabled()>
<org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>
<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.MainActivity: void mayPopFragment()>
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.helpers.MarkerIgnoringBase: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.api.support.app.AbstractIntentService: void <init>(java.lang.String)>
<org.slf4j.LoggerFactory: void emitSubstitutionWarning()>
<eu.lp0.slf4j.android.LogAdapter: void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.MarkerIgnoringBase: void trace(org.slf4j.Marker,java.lang.String)>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter$ViewHolder: void addOrRemoveItem()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,float[])>
<org.slf4j.helpers.Util: void <init>()>
<org.slf4j.event.SubstituteLoggingEvent: java.lang.Throwable getThrowable()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,int)>
<eu.lp0.slf4j.android.LogAdapter: java.lang.String getName()>
<org.androidannotations.api.BackgroundExecutor$WrongThreadListener: void onWrongBgSerial(java.lang.String,java.lang.String[])>
<io.github.easyintent.quickref.adapter.ReferenceItemAdapter: boolean isSelected(io.github.easyintent.quickref.data.ReferenceItem)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder integerArrayListExtra(java.lang.String,java.util.ArrayList)>
<org.androidannotations.api.sharedpreferences.IntPrefField: void <init>(android.content.SharedPreferences,java.lang.String,java.lang.Integer)>
<io.github.easyintent.quickref.fragment.MessageDialogFragment: io.github.easyintent.quickref.fragment.MessageDialogFragment newInstance(java.lang.String)>
<org.slf4j.helpers.MarkerIgnoringBase: void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.event.Level: void <init>(java.lang.String,int,int,java.lang.String)>
<org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onLoadDone(boolean,java.util.List,java.lang.String)>
<org.androidannotations.api.sharedpreferences.SetXmlSerializer: java.util.Set deserialize(java.lang.String)>
<org.androidannotations.api.sharedpreferences.StringPrefField: java.lang.String getOr(java.lang.String)>
<io.github.easyintent.quickref.MainActivity$1: boolean onQueryTextChange(java.lang.String)>
<io.github.easyintent.quickref.fragment.AboutFragment: boolean allowBack()>
<org.slf4j.helpers.MarkerIgnoringBase: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,short[])>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,int)>
<org.slf4j.impl.StaticMarkerBinder: void <clinit>()>
<org.slf4j.impl.StaticLoggerBinder: java.lang.String getLoggerFactoryClassStr()>
<org.androidannotations.api.sharedpreferences.FloatPrefField: java.lang.Object getOr(java.lang.Object)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx$FragmentBuilder_: io.github.easyintent.quickref.fragment.ReferenceListFragment build()>
<org.slf4j.helpers.SubstituteLogger: void log(org.slf4j.event.LoggingEvent)>
<io.github.easyintent.quickref.MainActivityEx$IntentBuilder_: void <init>(android.app.Fragment)>
<org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<eu.lp0.slf4j.android.LogAdapter: java.lang.String getCompactName()>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onItemTap(java.lang.Object,int)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<org.slf4j.helpers.SubstituteLogger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void setListShown(boolean)>
<io.github.easyintent.quickref.fragment.ReferenceListFragment$SelectorCallback: void <init>(io.github.easyintent.quickref.fragment.ReferenceListFragment,io.github.easyintent.quickref.fragment.ReferenceListFragment$1)>
<org.slf4j.event.EventRecodingLogger: boolean isWarnEnabled()>
<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.androidannotations.api.BackgroundExecutor: boolean hasSerialRunning(java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void debug(java.lang.String,java.lang.Throwable)>
<org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory bwCompatibleGetMarkerFactoryFromBinder()>
<org.slf4j.helpers.MessageFormatter: void doubleArrayAppend(java.lang.StringBuilder,double[])>
<eu.lp0.slf4j.android.LogAdapter: boolean isInfoEnabled()>
<eu.lp0.slf4j.android.LogAdapter: void error(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.FloatPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper put(float)>
<eu.lp0.slf4j.android.LogAdapter: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.builder.IntentBuilder: void <init>(android.content.Context,java.lang.Class)>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.repository.ReferenceRepository: java.util.List search(java.lang.String)>
<org.slf4j.helpers.MessageFormatter: void intArrayAppend(java.lang.StringBuilder,int[])>
<io.github.easyintent.quickref.fragment.MessageDialogFragment: void onCreate(android.os.Bundle)>
<org.slf4j.Marker: boolean equals(java.lang.Object)>
<org.androidannotations.api.builder.ActivityIntentBuilder: org.androidannotations.api.builder.ActivityStarter withOptions(android.os.Bundle)>
<org.androidannotations.api.sharedpreferences.LongPrefField: java.lang.Object getOr(java.lang.Object)>
<org.androidannotations.api.builder.ServiceIntentBuilder: android.content.ComponentName start()>
<org.androidannotations.api.support.app.AbstractIntentService: void onHandleIntent(android.content.Intent)>
<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$FragmentBuilder_: void <init>()>
<org.androidannotations.annotations.WakeLock$Level: void <init>(java.lang.String,int)>
<org.slf4j.helpers.BasicMDCAdapter: void <init>()>
<org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.MarkerIgnoringBase: boolean isTraceEnabled(org.slf4j.Marker)>
<eu.lp0.slf4j.android.LogAdapter: boolean isWarnEnabled(org.slf4j.Marker)>
<io.github.easyintent.quickref.fragment.ReferenceListFragmentEx: void search(io.github.easyintent.quickref.repository.RepositoryFactory,java.lang.String)>
<io.github.easyintent.quickref.fragment.MessageDialogFragment: void onActivityCreated(android.os.Bundle)>
<org.slf4j.impl.StaticMarkerBinder: org.slf4j.impl.StaticMarkerBinder getSingleton()>
<org.androidannotations.api.sharedpreferences.StringPrefEditorField: org.androidannotations.api.sharedpreferences.EditorHelper put(java.lang.String)>
<org.androidannotations.api.view.HasViews: android.view.View internalFindViewById(int)>
<org.androidannotations.api.builder.PostActivityStarter: void withAnimation(int,int)>
<org.androidannotations.annotations.WakeLock$Level: org.androidannotations.annotations.WakeLock$Level valueOf(java.lang.String)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesHelper: org.androidannotations.api.sharedpreferences.IntPrefField intField(java.lang.String,int)>
<eu.lp0.slf4j.android.LogAdapter: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.annotations.WakeLock$Flag: void <clinit>()>
<org.androidannotations.api.BackgroundExecutor: void cancelAll(java.lang.String,boolean)>
<org.slf4j.event.EventRecodingLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: boolean isErrorEnabled(org.slf4j.Marker)>
<org.slf4j.helpers.SubstituteLogger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<eu.lp0.slf4j.android.LogAdapter: void warn(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,int[])>
<org.slf4j.helpers.BasicMarker: boolean contains(java.lang.String)>
<org.androidannotations.api.ViewServer: void addWindowListener(org.androidannotations.api.ViewServer$WindowListener)>
<org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.ServiceIntentBuilder: boolean stop()>
<org.slf4j.event.EventConstants: void <init>()>
<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: void <init>(io.github.easyintent.quickref.fragment.FavoriteListFragment,io.github.easyintent.quickref.fragment.FavoriteListFragment$1)>
<org.androidannotations.api.BackgroundExecutor: void execute(java.lang.Runnable,java.lang.String,java.lang.String)>
<io.github.easyintent.quickref.fragment.ClosableFragment: boolean allowBack()>
<io.github.easyintent.quickref.repository.ReferenceRepository: java.util.List listByIds(java.util.List)>
<eu.lp0.slf4j.android.LogAdapter: boolean isErrorEnabled(org.slf4j.Marker)>
<io.github.easyintent.quickref.QuickRefActivityEx: void setIntent(android.content.Intent)>
<org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory getIMarkerFactory()>
<org.slf4j.helpers.BasicMDCAdapter: void clear()>
<org.slf4j.helpers.MarkerIgnoringBase: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.BasicMarker: java.util.Iterator iterator()>
<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<org.androidannotations.api.ViewServer$ViewServerWorker: boolean windowManagerAutolistLoop()>
<org.slf4j.event.EventRecodingLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.config.FavoriteConfig: void <init>(android.content.Context)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment$SelectorCallback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)>
<org.slf4j.helpers.SubstituteLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: void onViewCreated(android.view.View,android.os.Bundle)>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,java.io.Serializable)>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: android.content.SharedPreferences$Editor edit()>
<org.androidannotations.api.BackgroundExecutor$Task: void execute()>
<eu.lp0.slf4j.android.LogAdapter: boolean isInfoEnabled(org.slf4j.Marker)>
<org.slf4j.event.EventRecodingLogger: void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue)>
<org.slf4j.helpers.BasicMDCAdapter: java.util.Set getKeys()>
<org.androidannotations.api.builder.FragmentBuilder: org.androidannotations.api.builder.FragmentBuilder arg(java.lang.String,double)>
<eu.lp0.slf4j.android.LogAdapter: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.StringPrefField: java.lang.Object getOr(java.lang.Object)>
<org.slf4j.event.SubstituteLoggingEvent: java.lang.Object[] getArgumentArray()>
<org.slf4j.helpers.SubstituteLogger: boolean isDelegateNull()>
<org.androidannotations.api.sharedpreferences.BooleanPrefEditorField: void <init>(org.androidannotations.api.sharedpreferences.EditorHelper,java.lang.String)>
<org.slf4j.event.EventRecodingLogger: void trace(java.lang.String,java.lang.Object[])>
<org.slf4j.event.EventRecodingLogger: void trace(org.slf4j.Marker,java.lang.String)>
<org.androidannotations.api.ViewServer: void setFocusedWindow(android.app.Activity)>
<org.androidannotations.api.sharedpreferences.EditorHelper: org.androidannotations.api.sharedpreferences.EditorHelper cast()>
<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<io.github.easyintent.quickref.QuickRefActivityEx: io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_ intent(android.content.Context)>
<org.androidannotations.api.sharedpreferences.SharedPreferencesCompat: void <clinit>()>
<io.github.easyintent.quickref.fragment.AboutFragmentEx: void <init>()>
<org.slf4j.event.EventRecodingLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder parcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<org.androidannotations.api.BackgroundExecutor$1: void onWrongBgSerial(java.lang.String,java.lang.String[])>
<org.androidannotations.api.sharedpreferences.IntPrefField: java.lang.Integer getOr(java.lang.Integer)>
<io.github.easyintent.quickref.fragment.MessageDialogFragmentEx: void onCreate(android.os.Bundle)>
<org.slf4j.helpers.BasicMDCAdapter: java.util.Map getCopyOfContextMap()>
<io.github.easyintent.quickref.repository.ReferenceRepository: java.util.List list(java.lang.String)>
<io.github.easyintent.quickref.repository.RepositoryException: void <init>()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder action(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void debug(org.slf4j.Marker,java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>
<org.androidannotations.api.sharedpreferences.AbstractPrefField: java.lang.String key()>
<org.slf4j.impl.StaticMarkerBinder: org.slf4j.IMarkerFactory getMarkerFactory()>
<eu.lp0.slf4j.android.LogAdapter: void __infoFormat(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.SubstituteLogger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
<org.androidannotations.api.sharedpreferences.FloatPrefField: java.lang.Float getOr(java.lang.Float)>
<org.slf4j.helpers.NOPMDCAdapter: void clear()>
<org.androidannotations.api.sharedpreferences.StringPrefField: void putInternal(java.lang.Object)>
<io.github.easyintent.quickref.QuickRefActivityEx: android.view.View internalFindViewById(int)>
<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>
<org.androidannotations.api.BackgroundExecutor: void execute(java.lang.Runnable)>
<org.androidannotations.api.ViewServer$UncloseableOutputStream: int hashCode()>
<org.androidannotations.api.builder.IntentBuilder: org.androidannotations.api.builder.IntentBuilder extra(java.lang.String,java.lang.String)>
<org.slf4j.helpers.BasicMarker: boolean remove(org.slf4j.Marker)>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: void onSelectedItemsChanged()>
<org.slf4j.event.EventRecodingLogger: boolean isTraceEnabled(org.slf4j.Marker)>
<eu.lp0.slf4j.android.LoggerConfig: void <init>(eu.lp0.slf4j.android.LoggerConfig$ShowName)>
<io.github.easyintent.quickref.MainActivityEx: void setContentView(android.view.View)>
<eu.lp0.slf4j.android.LogAdapter: void error(java.lang.String,java.lang.Object)>
<io.github.easyintent.quickref.fragment.FavoriteListFragmentEx: io.github.easyintent.quickref.fragment.FavoriteListFragmentEx$FragmentBuilder_ builder()>
<io.github.easyintent.quickref.repository.DbFileLocator: java.io.File findDbFile()>
<org.androidannotations.api.UiThreadExecutor$1: void handleMessage(android.os.Message)>
<eu.lp0.slf4j.android.LogAdapter: void info(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.BasicMarker: java.lang.String toString()>
<org.slf4j.Logger: boolean isDebugEnabled()>
<io.github.easyintent.quickref.config.FavoriteConfig$1: void <init>(io.github.easyintent.quickref.config.FavoriteConfig)>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>
<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>
<org.androidannotations.annotations.EBean$Scope: org.androidannotations.annotations.EBean$Scope valueOf(java.lang.String)>
<eu.lp0.slf4j.android.LogAdapter: void error(java.lang.String,java.lang.Object[])>
<org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Throwable)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>
<org.androidannotations.api.UiThreadExecutor: org.androidannotations.api.UiThreadExecutor$Token nextToken(java.lang.String)>
<io.github.easyintent.quickref.QuickRefActivityEx: io.github.easyintent.quickref.QuickRefActivityEx$IntentBuilder_ intent(androidx.fragment.app.Fragment)>
<io.github.easyintent.quickref.fragment.AdapterListener: void onMultiSelectionStart()>
<io.github.easyintent.quickref.MainActivity: void onBackPressed()>
<org.slf4j.helpers.SubstituteLogger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])>
<io.github.easyintent.quickref.fragment.FavoriteListFragment: io.github.easyintent.quickref.fragment.FavoriteListFragment newInstance()>
